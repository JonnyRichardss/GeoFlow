#define FLT_MAX          3.402823466e+38F        // max value
float PrimitiveEllipsoid(float3 pos, float3 centre, float3 radius)
{
    float3 transformedPos = pos - centre;
    float k0 = length(transformedPos / radius);
    float k1 = length(transformedPos / (radius * radius));
    
    return k0 * (k0 - 1.0) / k1;
}
float PrimitivePlane(float3 pos, float3 normal, float offset)
{
    return dot(pos, normalize(normal)) + offset;
}
float PrimitiveBox(float3 pos, float3 centre, float3 radius)
{
    float3 transformedPos = pos - centre;
    float3 q = abs(transformedPos) - radius;
    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);
}
float PrimitiveSphere(float3 pos, float3 centre, float radius)
{
    float3 transformedPos = pos - centre;
    return length(transformedPos) - radius;
}
float Smin(float a, float b, float k)
{
    float h = saturate(0.5 + 0.5 * (b - a) / k);
    return lerp(b, a, h) - k * h * (1.0 - h);
}
float Smax(float a, float b, float k)
{
    float h = saturate(0.5 - 0.5 * (b + a) / k);
    return lerp(b, -a, h) - k * h * (1.0 - h);
}